import argparse
parser = argparse.ArgumentParser()
parser.add_argument('--dataset', default='AWA2', help='dateset')
parser.add_argument('--dataroot', default='./data', help='path to dataset')
parser.add_argument('--image_embedding', default='res101')
parser.add_argument('--class_embedding', default='att')
parser.add_argument('--syn_num', type=int, default=100, help='number samples to generate per class')
parser.add_argument('--preprocessing', action='store_true', default=True, help='enbale MinMaxScaler on visual features')
parser.add_argument('--batch_size', type=int, default=512, help='input batch size')
parser.add_argument('--resSize', type=int, default=2048, help='size of visual features')
parser.add_argument('--attSize', type=int, default=85, help='size of attribute features')
parser.add_argument('--nz0', type=int, default=85, help='size of the latent z vector')
parser.add_argument('--nepoch', type=int, default=2000, help='number of epochs to train for GANs')
parser.add_argument('--nepoch_classifier', type=int, default=60, help='number of epochs to train for the mapping net')
parser.add_argument('--beta1', type=float, default=0.5, help='beta1 for adam. default=0.5')
parser.add_argument('--critic_iter', type=int, default=5, help='critic iteration, following WGAN-GP')
parser.add_argument('--lambda_0', type=float, default=10, help='gradient penalty regularizer, following WGAN-GP')
parser.add_argument('--lr', type=float, default=1e-4, help='learning rate to train GANs ')
parser.add_argument('--lr_classifier', type=float, default=1e-4, help='learning rate to train mapping net')
parser.add_argument('--netG', default='', help="path to netG (to continue training)")
parser.add_argument('--netD', default='', help="path to netD (to continue training)")
parser.add_argument('--manualSeed', type=int, default=70, help='manual seed, default=1429')
parser.add_argument('--netD_layer_sizes', type=list, default=[4096])
parser.add_argument('--netG_layer_sizes', type=list, default=[4096,2048,2048])
parser.add_argument('--netM_layer_sizes', type=list, default=[1024,2048])
parser.add_argument('--att_std', type=float, default=0.08, help='std of the attribute augmentation noise')
parser.add_argument('--temperature', type=float, default=0.04)
parser.add_argument('--lambda_1', type=float, default=0.005)
opt = parser.parse_args()